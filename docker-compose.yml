version: '3.8'

# Este arquivo suporta variáveis BACKEND_PORT, FRONTEND_PORT e REACT_APP_API_URL
# Defina-as via Jenkins (Environment Inject, withCredentials, ou Docker plugin) conforme o seu pipeline.
# Para desenvolvimento local, use: BACKEND_PORT=4001 FRONTEND_PORT=3001
# Para produção, use: BACKEND_PORT=4000 FRONTEND_PORT=5000
services:
  backend:
    build:
      context: ./server
      dockerfile: Dockerfile
    image: santacasa/sistema-assinaturas-backend:latest
    networks:
      - sistema-assinaturas-network
    environment:
      # Configurações do Banco de Dados PostgreSQL
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: notasfiscais_db   # Use o mesmo nome do banco configurado no PostgreSQL
      DB_USER: postgres
      DB_PASSWORD: postgres
      # JWT Secret (Chave segura para produção)
      JWT_SECRET: sua-chave-secreta-muito-segura-aqui-para-producao-2024-santacasa
      LDAP_URL: ldap://santacasa.org:389
      LDAP_BASE_DN: DC=santacasa,DC=org
      LDAP_BIND_DN: CN=glpi,OU=USUARIOS,OU=SERVIDORES,DC=santacasa,DC=org
      LDAP_BIND_PASSWORD: Dke-Pp!]CXp1P}h2GTy[
      AD_URL: ldap://santacasa.org:389
      AD_BASE_DN: DC=santacasa,DC=org
      AD_USERNAME: CN=glpi,OU=USUARIOS,OU=SERVIDORES,DC=santacasa,DC=org
      AD_PASSWORD: Dke-Pp!]CXp1P}h2GTy[
      AUTH_MODE: ad
      PORT: 5000
      # Diretório de uploads
      UPLOAD_DIR: /app/uploads
    volumes:
      - /var/lib/sistema-assinaturas/uploads:/app/uploads
    deploy:
      replicas: 1  # Definir quantidade de réplicas para o Swarm
      ports:
        - target: 5000
          published: "${BACKEND_PORT:-4000}"
          protocol: tcp
          mode: ingress
      placement:
        constraints:
          - node.hostname == servdocker  # Garantir que sempre rode no mesmo nó
      restart_policy:
        condition: any

  frontend:
    build:
      context: ./client
      dockerfile: Dockerfile
      args:
        REACT_APP_API_URL: ${REACT_APP_API_URL:-http://172.16.0.219:4000}
    image: santacasa/sistema-assinaturas-frontend:latest
    networks:
      - sistema-assinaturas-network
    environment:
      - REACT_APP_API_URL=${REACT_APP_API_URL:-http://172.16.0.219:4000}
    deploy:
      replicas: 1  # Definir quantidade de réplicas para o Swarm
      ports:
        - target: 5000
          published: "${FRONTEND_PORT:-5000}"
          protocol: tcp
          mode: ingress
      restart_policy:
        condition: any

  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: notasfiscais_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres  # Certifique-se de que a senha aqui é a mesma no backend
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - sistema-assinaturas-network
    deploy:
      replicas: 1  # Definir quantidade de réplicas para o Swarm
      ports:
        - target: 5432
          published: "5432"
          protocol: tcp
          mode: ingress
      restart_policy:
        condition: any

networks:
  sistema-assinaturas-network:
    driver: overlay  # Usar overlay para Docker Swarm
    attachable: true  # Permitir containers standalone se conectarem

volumes:
  postgres_data:
    driver: local  # Definir driver local para Swarm, pode ser modificado conforme a necessidade
