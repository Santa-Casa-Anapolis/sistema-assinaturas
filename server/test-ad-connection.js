const { connectToAD, authenticateUser, getUsersByRole, disconnectFromAD } = require('./ad-config');
require('dotenv').config();

async function testADConnection() {
  console.log('üîç Testando conex√£o com Active Directory...\n');

  try {
    // Testar conex√£o
    console.log('1Ô∏è‚É£ Conectando ao AD...');
    await connectToAD();
    console.log('‚úÖ Conex√£o estabelecida com sucesso!\n');

    // Testar autentica√ß√£o (se credenciais fornecidas)
    if (process.argv.includes('--test-auth')) {
      const username = process.argv[process.argv.indexOf('--test-auth') + 1];
      const password = process.argv[process.argv.indexOf('--test-auth') + 2];
      
      if (username && password) {
        console.log(`2Ô∏è‚É£ Testando autentica√ß√£o do usu√°rio: ${username}`);
        const user = await authenticateUser(username, password);
        console.log('‚úÖ Autentica√ß√£o bem-sucedida!');
        console.log('üìã Dados do usu√°rio:');
        console.log(`   Nome: ${user.name}`);
        console.log(`   Email: ${user.email}`);
        console.log(`   Role: ${user.role}`);
        console.log(`   Setor: ${user.sector || 'N√£o definido'}`);
        console.log(`   Departamento: ${user.department || 'N√£o definido'}\n`);
      } else {
        console.log('‚ö†Ô∏è  Para testar autentica√ß√£o, use: node test-ad-connection.js --test-auth username password\n');
      }
    }

    // Testar busca de usu√°rios por role
    if (process.argv.includes('--test-users')) {
      const role = process.argv[process.argv.indexOf('--test-users') + 1] || 'supervisor';
      
      console.log(`3Ô∏è‚É£ Buscando usu√°rios com role: ${role}`);
      const users = await getUsersByRole(role);
      console.log(`‚úÖ Encontrados ${users.length} usu√°rios:`);
      
      users.forEach((user, index) => {
        console.log(`   ${index + 1}. ${user.name} (${user.email})`);
      });
      console.log('');
    }

    // Desconectar
    await disconnectFromAD();
    console.log('4Ô∏è‚É£ Desconectado do AD');

  } catch (error) {
    console.error('‚ùå Erro durante o teste:', error.message);
    
    if (error.code === 'ECONNREFUSED') {
      console.log('\nüí° Poss√≠veis solu√ß√µes:');
      console.log('   - Verifique se o servidor AD est√° acess√≠vel');
      console.log('   - Verifique se a porta 389 est√° aberta');
      console.log('   - Verifique a URL do AD na configura√ß√£o');
    } else if (error.message.includes('Credenciais inv√°lidas')) {
      console.log('\nüí° Poss√≠veis solu√ß√µes:');
      console.log('   - Verifique as credenciais do usu√°rio');
      console.log('   - Verifique se o usu√°rio existe no AD');
    } else if (error.message.includes('Service Account')) {
      console.log('\nüí° Poss√≠veis solu√ß√µes:');
      console.log('   - Verifique as credenciais do Service Account');
      console.log('   - Verifique as permiss√µes do Service Account');
    }
  }
}

// Verificar configura√ß√£o
console.log('üìã Configura√ß√£o atual:');
console.log(`   AD_URL: ${process.env.AD_URL || 'N√£o configurado'}`);
console.log(`   AD_BASE_DN: ${process.env.AD_BASE_DN || 'N√£o configurado'}`);
console.log(`   AD_USERNAME: ${process.env.AD_USERNAME || 'N√£o configurado'}`);
console.log(`   AUTH_MODE: ${process.env.AUTH_MODE || 'local'}\n`);

// Executar teste
testADConnection();

// Exemplos de uso
console.log('üìñ Exemplos de uso:');
console.log('   node test-ad-connection.js');
console.log('   node test-ad-connection.js --test-auth joao.silva senha123');
console.log('   node test-ad-connection.js --test-users supervisor');
console.log('   node test-ad-connection.js --test-auth joao.silva senha123 --test-users supervisor');
